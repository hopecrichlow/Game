{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","js/bug.js","js/tests.js"],"names":[],"mappings":"AAAA;;;;;;ACAA,IAAI,GAAG,GAAG,SAAN,GAAG,CAAY,MAAM,EAAE;AACzB,QAAM,GAAG,MAAM,IAAI,EAAE,CAAC;;AAEtB,MAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;AACvB,MAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;AAC1B,MAAI,CAAC,IAAI,GAAG,YAAW;AACrB,QAAI,CAAC,MAAM,GAAG,MAAM,CAAC;GACtB,CAAC;CACH,CAAC;;qBAEa,GAAG;;;;;;;;mBCVF,OAAO;;;;AAEvB,AAAC,CAAA,YAAW;AACV,cAAY,CAAC;AACb,MAAI,GAAG,GAAG,sBAAS,CAAC;;AAEpB,UAAQ,CAAC,eAAe,EAAE,YAAW;;AAEnC,YAAQ,CAAC,oBAAoB,EAAE,YAAW;AACxC,QAAE,CAAC,8BAA8B,EAAE,YAAW;AAC5C,cAAM,CAAC,GAAG,4BAAe,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;OAC3C,CAAC,CAAC;;AAEH,QAAE,CAAC,uCAAuC,EAAE,YAAW;AACrD,cAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;OACxC,CAAC,CAAC;;AAEH,QAAE,CAAC,oCAAoC,EAAE,YAAW;AAClD,cAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;OACvC,CAAC,CAAC;KAGJ,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ,CAAA,EAAE,CAAE","file":"tests.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","let Bug = function(params) {\n  params = params || {};\n\n  this.status = 'normal';\n  this.color = params.color;\n  this.swat = function() {\n    this.status = 'mean';\n  };\n};\n\nexport default Bug;","import Bug from './bug';\n\n(function() {\n  'use strict';\n  let bug = new Bug();\n\n  describe('My Bug Object', function() {\n\n    describe('Creating a new bug', function() {\n      it('should create a new instance', function() {\n        expect(bug instanceof Bug).to.equal(true);\n      });\n\n      it('should have a status that is a string', function() {\n        expect(bug).to.have.property('status');\n      });\n\n      it('should should be normal by default', function() {\n        expect(bug.status).to.equal('normal');\n      });\n\n\n    });\n  });\n}()); \n"]}